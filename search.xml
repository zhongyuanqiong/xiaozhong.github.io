<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>bootstrarp框架的使用</title>
      <link href="/posts/a6.html"/>
      <url>/posts/a6.html</url>
      
        <content type="html"><![CDATA[<p>欢迎来到小钟的博客！</p><h2 id="什么是Bootstrarp框架？"><a href="#什么是Bootstrarp框架？" class="headerlink" title="什么是Bootstrarp框架？"></a>什么是Bootstrarp框架？</h2><ul><li>bootstrarp是一个写网页的框架 就是说你只需要写HTML标签然后调用它提供的类你就可以很快速的做一个高大上的网页，你不用担心兼容问题，提供了很多样式供你选择！</li><li>用它提供的样式和组件快速写网站</li><li>Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。</li><li>里面创建了很多样式或者组件供你使用</li></ul><h2 id="使用Bootstrarp框架的步骤："><a href="#使用Bootstrarp框架的步骤：" class="headerlink" title="使用Bootstrarp框架的步骤："></a>使用Bootstrarp框架的步骤：</h2><ol><li><p>到bootstrarp官网下载bootstrarp相关文件：</p><ul><li><a href="https://v3.bootcss.com/getting-started/#download">https://v3.bootcss.com/getting-started/#download</a></li></ul></li><li><p>创建文件夹结构：</p><p><a href="https://imgtu.com/i/5QMo59"><img src="https://z3.ax1x.com/2021/10/14/5QMo59.png" alt="bootstrarp文件夹.png"></a></p></li><li><p>打开HTML文件  引入下载好的bootstrarp相关文件：</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;link rel="stylesheet" href="bootstrap/css/bootstrap.min.css"&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><ol start="4"><li>书写你的网页内容</li></ol><h2 id="Bootstrarp框架的栅格系统："><a href="#Bootstrarp框架的栅格系统：" class="headerlink" title="Bootstrarp框架的栅格系统："></a>Bootstrarp框架的栅格系统：</h2><table><thead><tr><th align="center"></th><th align="center">超小屏幕（手机）&lt;768px</th><th align="center">小屏设备（平板）&gt;=768px</th><th align="center">中等屏幕（桌面显示器）&gt;=922px</th><th align="center">大屏屏幕（大桌面显示器） &gt;=1200px</th></tr></thead><tbody><tr><td align="center">.container 最大宽度</td><td align="center">自动（100%）</td><td align="center">750px</td><td align="center">970px</td><td align="center">1170px</td></tr><tr><td align="center">类前缀</td><td align="center">.col-xs-</td><td align="center">.col-sm-</td><td align="center">.col-md-</td><td align="center">.col-lg-</td></tr><tr><td align="center">列（column）数</td><td align="center">12</td><td align="center">12</td><td align="center">12</td><td align="center">12</td></tr></tbody></table><ul><li><p>Bootstrarp提供了一套响应式，移动设备优先的流式栅格系统 ，随着屏幕或视口尺寸的增加，</p><p>系统会自动分为最多12列</p></li><li><p>行（row）必须放在container布局容器里面</p></li><li><p>通过行（row）在水平方向创建一组列（column） 你的内容应当放在列（column）内</p></li><li><p>一行最多分成12列 超过的则在下一行显示</p></li><li><p>实现列的平均划分 需要给列添加类前缀</p></li><li><p>可以同时为一列指定多个设备的类名，以便划分不同的份数 例如 class=”col-xs-12 col-md-2 col-lg-3”</p></li><li><p>每一列默认有15px的padding</p></li></ul><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;!--------大屏幕的时候 一列占3份  中等屏幕的时候 一列占4份  平板的时候 一列占6份  手机的时候 一列占12份-------&gt; &lt;style&gt;     .row{         margin-top:50px;     }        .container .row div {            border: 1px solid salmon;        }    &lt;/style&gt;  &lt;!-----------container容器--&gt;    &lt;div class="container"&gt;        &lt;!------------一行--&gt;        &lt;div class="row"&gt;            &lt;div class="col-lg-3 col-md-4 col-sm-6 col-xs-12"&gt;1&lt;/div&gt;            &lt;div class="col-lg-3 col-md-4 col-sm-6 col-xs-12"&gt;2&lt;/div&gt;            &lt;div class="col-lg-3 col-md-4 col-sm-6 col-xs-12"&gt;3&lt;/div&gt;            &lt;div class="col-lg-3 col-md-4 col-sm-6 col-xs-12"&gt;4&lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h3><p><a href="https://imgtu.com/i/5Q4lNT"><img src="https://z3.ax1x.com/2021/10/14/5Q4lNT.png" alt="5Q4lNT.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
          <category> bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架 </tag>
            
            <tag> bootstrarp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax笔记</title>
      <link href="/posts/a1.html"/>
      <url>/posts/a1.html</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要学习Ajax呢？"><a href="#为什么要学习Ajax呢？" class="headerlink" title="为什么要学习Ajax呢？"></a>为什么要学习Ajax呢？</h2><h4 id="因为传统网站中存在以下的问题："><a href="#因为传统网站中存在以下的问题：" class="headerlink" title="因为传统网站中存在以下的问题："></a>因为传统网站中存在以下的问题：</h4><ul><li>网速慢的情况下，页面加载时间长，用户只能等待</li><li>表单提交后，如果一项内容不合格，需要重新填写所有表单内容</li><li>页面跳转，重新加载页面，造成资源的浪费，增加用户等待时间 </li></ul><h3 id="Ajax-阿贾克斯"><a href="#Ajax-阿贾克斯" class="headerlink" title="Ajax:阿贾克斯"></a>Ajax:阿贾克斯</h3><p>它是浏览器提供的一套方法，可以实现页面无刷新就能<font color:red="">更新数据</font>,提高用户浏览网站应用的体验。</p><h3 id="Ajax的应用场景："><a href="#Ajax的应用场景：" class="headerlink" title="Ajax的应用场景："></a>Ajax的应用场景：</h3><ul><li>页面上拉加载更多数据</li><li>列表数据无刷新分页</li><li>表单项离开焦点数据验证</li><li>搜索框提示文字下拉列表</li></ul><h3 id="Ajax的运行环境："><a href="#Ajax的运行环境：" class="headerlink" title="Ajax的运行环境："></a><font color:red="">Ajax的运行环境：</font></h3><ul><li><font color:red="">Ajax技术需要运行在网站环境中才能生效  就是要搭建在服务区上</font></li></ul><h3 id="Ajax运行原理："><a href="#Ajax运行原理：" class="headerlink" title="Ajax运行原理："></a>Ajax运行原理：</h3><p>Ajax相当于浏览器发送请求与接收响应的代理人，以实现在不影响用户浏览网页的情况下局部刷新界面，从而提高用户体验</p><h3 id="Ajax的实现步骤："><a href="#Ajax的实现步骤：" class="headerlink" title="Ajax的实现步骤："></a><font color:red="">Ajax的实现步骤：</font></h3><ol><li><p>创建对象</p><ul><li>var xhr = new XMLHttpRequest();</li></ul></li><li><p>用open(‘请求方式’,’请求地址’,同步（true）还是异步)；</p><ul><li>xhr.open(‘get’,’a.php’,true);</li></ul></li><li><p>用send发送请求 或者参数(二选一)</p><ul><li>xhr.send();     (没有带参数)</li><li>xhr.send(username=zhong&amp;age=20);     (带参数)</li></ul></li><li><p>监听状态变化</p><ul><li><p>xhr.onreadystatechange = function () {</p><p>​      if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {</p><p> 5.通过xhr.responseText获取服务器端响应的数据</p><p>​        a.innerHTML = xhr.responseText;</p><p>​      }</p><p>​    }</p></li></ul></li></ol><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><h4 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>a<span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//1.创建对象</span>      <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//2.用open('请求发送','请求地址',同步(true)还是异步);</span>      xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span> <span class="token string">'a.php'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//  用send发送请求 或者参数</span>      xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//3.在Ajax的onreadystatechange中创建函数，在函数中判断Ajax的状态并体现</span>      xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment">//5.通过xhr.responseText获取服务器端响应的数据并且应用DOM技术局部刷新页面</span>              a<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="服务端："><a href="#服务端：" class="headerlink" title="服务端："></a>服务端：</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'my name is xiaozhong'</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h3><p><a href="https://imgtu.com/i/5uC5lt"><img src="https://z3.ax1x.com/2021/10/13/5uC5lt.png" alt="Ajax.png"></a></p><h3 id="服务器端响应的数据格式（JSON）："><a href="#服务器端响应的数据格式（JSON）：" class="headerlink" title="服务器端响应的数据格式（JSON）："></a>服务器端响应的数据格式（JSON）：</h3><ul><li>在真实的项目中，服务器端大多数情况下会以JSON对象作为响应数据的格式</li><li>当客户端拿到数据后，要将JSON数据和HTML字符串拼接，然后将拼接结果展示在页面中</li><li>因为服务器端响应过来的数据是字符串 所以将JSON字符串转换为JSON对象（JSON.parse(Ajax对象.responseText)）</li></ul><h3 id="例子：-1"><a href="#例子：-1" class="headerlink" title="例子："></a>例子：</h3><ul><li>客户端：</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">        <span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//通过DOM操作获取网页中的标签元素</span>            <span class="token keyword">var</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> age <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//创建Ajax对象</span>            <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//用什么方式请求 请求的地址 同步还是异步</span>            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span> <span class="token string">'cs.php'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//用send发送请求</span>            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//监听状态变化</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">//JSON.parse()将JSON字符串解析为javaScript对象</span>                    <span class="token keyword">var</span> responseText <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>                    text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> responseText<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                    age<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> responseText<span class="token punctuation">.</span>age<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>服务器端：</li></ul><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'{"name":"zhong","age":"20"}'</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="效果图：-1"><a href="#效果图：-1" class="headerlink" title="效果图："></a>效果图：</h3><p><a href="https://imgtu.com/i/5MAve1"><img src="https://z3.ax1x.com/2021/10/13/5MAve1.png" alt="服务器端传递JSON对象.png"></a></p><h3 id="请求参数传递："><a href="#请求参数传递：" class="headerlink" title="请求参数传递："></a>请求参数传递：</h3><ul><li><p>GET请求方式：</p></li><li><p>xhr.open(‘get’,’a.php?username=xiaozhnog&amp;pass=20’);</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">//获取输入框的内容存入str</span> <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'username='</span> <span class="token operator">+</span> username<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'&amp;'</span> <span class="token operator">+</span> <span class="token string">'pass='</span> <span class="token operator">+</span> pass<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'&amp;'</span> <span class="token operator">+</span> <span class="token string">'email='</span> <span class="token operator">+</span> email<span class="token punctuation">.</span>value<span class="token punctuation">;</span>   <span class="token comment">// 创建AJAX对象</span>    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//用什么方式发送请求 请求的地址 是同步还是异步</span>   xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span> <span class="token string">'b.php?'</span> <span class="token operator">+</span> str<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>POST请求方式：</p></li><li><p>xhr.setRequestHeader(‘Content-Type’,’application/x-www-form-urlencoded’);</p></li><li><p>xhr.send(‘name=xiaozhong&amp;age=20’);</p></li></ul><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;script&gt; //创建Ajax对象                var xhr = new XMLHttpRequest();                //用什么方式请求 请求的地址 同步还是异步                xhr.open('post', 'post.php', true);                //使用send发送                var str = username.value;                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');                xhr.send('username=' + str);&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GET提交与POST提交详解</title>
      <link href="/posts/a7.html"/>
      <url>/posts/a7.html</url>
      
        <content type="html"><![CDATA[<h3 id="GET提交与POST提交详解："><a href="#GET提交与POST提交详解：" class="headerlink" title="GET提交与POST提交详解："></a><font color:blue="">GET提交与POST提交详解：</font></h3><h3 id="GET提交："><a href="#GET提交：" class="headerlink" title="GET提交："></a><font color:red="">GET提交：</font></h3><ul><li>以键值对的方式提交  key:value   通过键名获取键值</li><li>安全性不高 因为请求数据加在地址（url）后面</li><li>传输数据量小 </li></ul><h3 id="以GET提交方式有哪些："><a href="#以GET提交方式有哪些：" class="headerlink" title="以GET提交方式有哪些："></a>以GET提交方式有哪些：</h3><ul><li>网页中的超链接</li><li>form表单提交方式method为get</li></ul><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本"> &lt;!---------第一种方法--&gt;    &lt;a href="login.php?username=xiaozhong"&gt;点击&lt;/a&gt;    &lt;!--------第二种方法--&gt;    &lt;form action="login.php" method="get"&gt;        用户名：&lt;input type="text" name="username"&gt; &lt;br /&gt;        密码：&lt;input type="password" name="pass"&gt; &lt;br /&gt;        &lt;input type="submit" value="登录"&gt;    &lt;/form&gt;服务器端获取传递过来的数据（php）&lt;?php //get方式获取传递的值 通过键名获取键值$username=$_GET['username'];  ?&gt;&lt;?php//post方式提交的获取传递的值 通过键名获取键值$username=$_POST['username'];$pass=$POST['pass'];?&gt;服务器端获取传递过来的数据（javaweb）String pname = request.getParameter("username");String pass = request.getParameter("pass");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="POST提交"><a href="#POST提交" class="headerlink" title="POST提交:"></a><font color:red="">POST提交:</font></h3><ul><li>以键值对的方式提交  key:value   通过键名获取键值</li><li>安全性高 因为请求数据封装在HTML头中</li><li>传输数据量大</li></ul><h3 id="以POST提交方式："><a href="#以POST提交方式：" class="headerlink" title="以POST提交方式："></a>以POST提交方式：</h3><ul><li>form表单提交方式method为post</li></ul><h3 id="例子：-1"><a href="#例子：-1" class="headerlink" title="例子："></a>例子：</h3><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">   &lt;!--------以post方式提交--&gt;    &lt;form action="login.php" method="post"&gt;        用户名：&lt;input type="text" name="username"&gt; &lt;br /&gt;        密码：&lt;input type="password" name="pass"&gt; &lt;br /&gt;        &lt;input type="submit" value="登录"&gt;    &lt;/form&gt;服务器端获取传递过来的数据（php）&lt;?php//post方式提交的获取传递的值 通过键名获取键值$username=$_POST['username'];$pass=$POST['pass'];?&gt;服务器端获取传递过来的数据（javaweb）String pname = request.getParameter("username");String pass = request.getParameter("pass");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="有两种提交数据的方式-那到底用哪种呢？"><a href="#有两种提交数据的方式-那到底用哪种呢？" class="headerlink" title="有两种提交数据的方式 那到底用哪种呢？"></a>有两种提交数据的方式 那到底用哪种呢？</h3><ul><li>具体需求具体分析</li><li>如果该项目对安全性有较高的要求 就用post</li><li>如果该表单需要上传文件时  就用post</li><li>如果该项目对安全性没有较高的要求 就用get</li><li><font color:red="">值得注意的是get提交有长度限制 因为地址（url）有长度限制</font></li></ul>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS之三大特性（层叠性-继承性-优先性）</title>
      <link href="/posts/a3.html"/>
      <url>/posts/a3.html</url>
      
        <content type="html"><![CDATA[<h2 id="各位在编写样式时有遇到以下问题吗？"><a href="#各位在编写样式时有遇到以下问题吗？" class="headerlink" title="各位在编写样式时有遇到以下问题吗？"></a>各位在编写样式时有遇到以下问题吗？</h2><ol><li><p>在设置标签的样式时 选择器相同的情况下  样式相同会被覆盖</p></li><li><p>有些标签在你没有设置任何样式时 会默认有样式呢 比如（文字颜色和大小）</p></li><li><p>有时候设置标签样式没有效果</p><hr></li></ol><h3 id="问题一解答："><a href="#问题一解答：" class="headerlink" title="问题一解答："></a>问题一解答：</h3>   <pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">为什么在设置标签的样式时 选择器相同的情况下  样式相同会被覆盖？--这是因为CSS的层叠性--层叠性：是指相同的选择器设置相同的样式时，一个样式会覆盖另一个样式 层叠性主要用来解决样式冲突问题--在样式冲突时，遵循就近原则（后来居上），样式不冲突就不会层叠  因为代码顺序执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h3>   <pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;html lang="en"&gt;  &lt;head&gt;&lt;style&gt;        .box {            width: 100px; height: 100px;background-color: red;        }        .box {         /*相同的选择器*/            background-color: orange;   /*相同的样式，会被覆盖上面的背景颜色red*/             border: 3px solid green;  /*不同的样式 不会被覆盖*/        }    &lt;/style&gt;&lt;/head&gt;    &lt;body&gt;         &lt;div class="box"&gt;box&lt;/div&gt;    &lt;/body&gt;    &lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h3><p>   <a href="https://imgtu.com/i/5EOa0f"><img src="https://z3.ax1x.com/2021/10/10/5EOa0f.png" alt="问题1.png"></a></p><h3 id="问题二解答："><a href="#问题二解答：" class="headerlink" title="问题二解答："></a>问题二解答：</h3><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">有些标签在你没有设置任何样式时 会默认有样式呢 比如（文字颜色和大小）？--这是因为CSS的继承性--继承性:子标签会继承父标签的某些样式 如文字颜色和大小 以text-,line-,font-开头的会被继承<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="例如：-1"><a href="#例如：-1" class="headerlink" title="例如："></a>例如：</h3><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML"> &lt;html&gt;        &lt;style&gt;            /*只设置父标签div的样式 没有设置子标签p的样式*/            .box {                     width: 100px;            height: 100px;            background-color: violet;            color: greenyellow;            font-size: 25px;        }         &lt;/style&gt;    &lt;div class="box"&gt;   &lt;!----父标签-----&gt;           &lt;p&gt;我是小钟&lt;/p&gt;    &lt;!------子标签------&gt;     &lt;/div&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果图：-1"><a href="#效果图：-1" class="headerlink" title="效果图："></a>效果图：</h3><p><a href="https://imgtu.com/i/5EjnIO"><img src="https://z3.ax1x.com/2021/10/11/5EjnIO.png" alt="问题二.png"></a></p><h3 id="问题三解答："><a href="#问题三解答：" class="headerlink" title="问题三解答："></a>问题三解答：</h3><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">为什么有时候设置标签样式没有效果？--这是因为CSS中的优先级--优先级（权重）：当给一个标签设置样式时，选择不同的选择器时， 会执行选择器权重高的样式，选择器权重低的样式不会被执行 --权重可以叠加<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="优先级（权重）表格："><a href="#优先级（权重）表格：" class="headerlink" title="优先级（权重）表格："></a>优先级（权重）表格：</h3><table><thead><tr><th align="center">选择器</th><th align="center">选择器的权重</th></tr></thead><tbody><tr><td align="center">继承或者*</td><td align="center">0.0.0.0</td></tr><tr><td align="center">标签选择器</td><td align="center">0.0.0.1</td></tr><tr><td align="center">类选择器，伪类选择器</td><td align="center">0.0.1.0</td></tr><tr><td align="center">id选择器</td><td align="center">0.1.0.0</td></tr><tr><td align="center">行内样式</td><td align="center">1.0.0.0</td></tr><tr><td align="center">！important</td><td align="center">无穷大</td></tr></tbody></table><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">可以简单的记忆：---继承和通配符的权重为0---标签选择器的权重为1---类选择器以及伪类选择器的权重为10---id选择器的权重为100---行内样式的权重为1000--- !important 的权重为无穷大<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="权重叠加："><a href="#权重叠加：" class="headerlink" title="权重叠加："></a>权重叠加：</h3><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">--如：  -- p #text {}    权重为 1 + 100 = 101  -- .a1 #w {}   权重为 10 + 100 = 110 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="继承例子："><a href="#继承例子：" class="headerlink" title="继承例子："></a>继承例子：</h3><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;html&gt;    &lt;style&gt;        /*继承权重为0*/        .box1{             width: 100px; height: 100px;border: 2px solid black;            color: green;            }        p{            color:red;              }    &lt;/style&gt;    &lt;div class="box1"&gt;            &lt;p&gt;小钟&lt;/p&gt;    &lt;/div&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果图：-2"><a href="#效果图：-2" class="headerlink" title="效果图："></a>效果图：</h3><p><a href="https://imgtu.com/i/5ExcPU"><img src="https://z3.ax1x.com/2021/10/11/5ExcPU.png" alt="继承.png"></a></p><h3 id="权重叠加例子："><a href="#权重叠加例子：" class="headerlink" title="权重叠加例子："></a>权重叠加例子：</h3><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;html&gt;      &lt;style&gt;            .box2 {               /* 权重为 0.0.1.0 */                width: 10px;                height: 10px;                background-color: coral;            }            .box1 .box2 {           /* 权重为0.0.1.0 + 0.0.1.0 = 0.0.2.0 */                width: 200px;                height: 200px;                background-color: greenyellow;            }     &lt;/style&gt;    &lt;div class="box1"&gt;        &lt;div class="box2"&gt;我是一个盒子&lt;/div&gt;    &lt;/div&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果图：-3"><a href="#效果图：-3" class="headerlink" title="效果图："></a>效果图：</h3><p><a href="https://imgtu.com/i/5EzFzQ"><img src="https://z3.ax1x.com/2021/10/11/5EzFzQ.png" alt="权重叠加.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML中块级元素和行内元素以及行内块元素详解</title>
      <link href="/posts/a2.html"/>
      <url>/posts/a2.html</url>
      
        <content type="html"><![CDATA[<h1 id="你是否有以下困惑："><a href="#你是否有以下困惑：" class="headerlink" title="你是否有以下困惑："></a>你是否有以下困惑：</h1><ol><li><p>为什么有些标签能够设置宽度和高度，而有些标签不能设置呢？</p></li><li><p>为什么有些标签能够独占一行，而有些标签一行可以放很多个呢？</p></li><li><p>可我就想让这个标签可以设置宽度和宽度并且自己不占满一行呢？</p></li></ol><h2 id="问题1解答："><a href="#问题1解答：" class="headerlink" title="问题1解答："></a>问题1解答：</h2><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">为什么有些标签能够设置宽度和高度，而有些标签不能设置呢？---因为在html中块级（block）元素和行内块（inline-block）元素可以设置宽度和高度---行内（inline）元素不可以设置宽度和高度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="例如"><a href="#例如" class="headerlink" title="例如:"></a>例如:</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">.box1</span><span class="token punctuation">{</span>             <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> violet<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.box1</span><span class="token punctuation">{</span>             <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>box1</span><span class="token punctuation">&gt;</span></span>box1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>box2</span><span class="token punctuation">&gt;</span></span>box2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h3><p><a href="https://imgtu.com/i/5AGhNV"><img src="https://z3.ax1x.com/2021/10/10/5AGhNV.png" alt="问题1.png"></a></p><hr><h2 id="问题2解答："><a href="#问题2解答：" class="headerlink" title="问题2解答："></a>问题2解答：</h2><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">为什么有些标签能够独占一行，而有些标签一行可以放很多个呢？  ---因为块级（block）元素独占一行  ---相邻行内（inline）元素或者行内块(inline-block)元素一行可以放很多个，直到充满整个父级盒子的宽度，才会换下一行显示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token selector">.box1</span> <span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> tomato<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.box2</span> <span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>box1</span><span class="token punctuation">&gt;</span></span>one<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>box1</span><span class="token punctuation">&gt;</span></span>two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>box2</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>box2</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果：-1"><a href="#效果：-1" class="headerlink" title="效果："></a>效果：</h3><p><a href="https://imgtu.com/i/5AG0tf"><img src="https://z3.ax1x.com/2021/10/10/5AG0tf.png" alt="问题2.png"></a></p><hr><h2 id="问题3解答："><a href="#问题3解答：" class="headerlink" title="问题3解答："></a>问题3解答：</h2><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">可我就想让这个标签可以设置宽度和宽度并且自己不占满一行呢？ ---如果该标签不是块级（block）元素或者不是行内块元素时： ---就将该标签进行模式转换成块级（display: block;）或者行内块元素(display: inline-block;) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="例如-1"><a href="#例如-1" class="headerlink" title="例如:"></a>例如:</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token selector">.box1</span> <span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果：-2"><a href="#效果：-2" class="headerlink" title="效果："></a>效果：</h3><p><a href="https://imgtu.com/i/5AGv4K"><img src="https://z3.ax1x.com/2021/10/10/5AGv4K.png" alt="问题3.png"></a></p><hr><h2 id="常见的块级元素，行内元素，行内块元素有哪些？"><a href="#常见的块级元素，行内元素，行内块元素有哪些？" class="headerlink" title="常见的块级元素，行内元素，行内块元素有哪些？"></a>常见的块级元素，行内元素，行内块元素有哪些？</h2><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">---块级元素：  div,h1~h6, p,ul,ol,li---行内元素：  a,span,i,strong---行内块元素：input,img,td<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><pre class="line-numbers language-文本" data-language="文本"><code class="language-文本">--块级元素的特点：   (1)可以设置宽度和高度  （2）自己单独占一行  （3）宽度默认是父级元素的宽度的100%  （4）块级元素是一个容器或者是一个盒子，里面可以放行内元素或者放行内块元素  --行内元素的特点：  （1）不能设置宽度和高度（无效）  （2）相邻行内元素一行可以放很多个，直到充满整个父级盒子的宽度，才会换下一行显示   （3）默认宽度是它本身的内容宽度   （4）行内元素只能放行内元素或者文本                              -行内块元素的特点：   （1）它拥有块级元素和行内元素的特点   （2）可以设置宽度和高度（块级元素的特点）   （3）宽度是它本身的内容宽度（行内元素的特点）   （4）一行可以显示多个行内元素（行内元素的特点）   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>作者：<a href="httsp://zhongyuanqiong.github.io">小钟个人博客</a></p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown快速入门小技巧(hexo博客文章--格式用法)</title>
      <link href="/posts/15546.html"/>
      <url>/posts/15546.html</url>
      
        <content type="html"><![CDATA[<p>相遇皆是缘分</p><h1 id="Markdown-的快速入门-后缀是-md"><a href="#Markdown-的快速入门-后缀是-md" class="headerlink" title="Markdown 的快速入门(后缀是  .md)"></a>Markdown 的快速入门(后缀是  .md)</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">ctrl+shift+1 大纲显示ctrl+/ 源代码显示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">```<span class="token function">java</span><span class="token punctuation">(</span>html等等<span class="token punctuation">)</span>   会自动提示<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">#标题1 （大）##标题2###标题3####标题4 （小）以此类推 最高标题6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//加粗</span><span class="token operator">*</span><span class="token operator">*</span>加粗<span class="token operator">*</span><span class="token operator">*</span><span class="token comment">//代码高亮显示</span><span class="token operator">==</span>高亮<span class="token operator">==</span><span class="token comment">//删除线</span><span class="token operator">~</span><span class="token operator">~</span>删除线<span class="token operator">~</span><span class="token operator">~</span><span class="token comment">//斜体</span>  <span class="token operator">*</span>斜体内容<span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="引用："><a href="#引用：" class="headerlink" title="引用："></a>引用：</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//引用语法</span><span class="token operator">&gt;</span>作者：泽<span class="token operator">&gt;&gt;</span>作者：泽<span class="token operator">&gt;&gt;&gt;</span>作者：泽<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>作者：泽</p><blockquote><p>作者：泽</p><blockquote><p>作者：泽</p></blockquote></blockquote></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//分割线</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//在线图片与本地图片</span><span class="token operator">!</span><span class="token punctuation">[</span>照片名子<span class="token punctuation">]</span>（<span class="token operator">/</span>image<span class="token operator">/</span>me<span class="token punctuation">.</span>png）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://dss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=3252521864,872614242&amp;fm=26&amp;gp=0.jpg" alt="img"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//超链接语法</span><span class="token punctuation">[</span>超链接名字<span class="token punctuation">]</span>（https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>gihub<span class="token punctuation">.</span>com<span class="token operator">/</span>yerenping）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://music.163.com/#/song?id=28892408&amp;market=baiduqk">我的天空</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//无需列表</span><span class="token operator">-</span> 目录<span class="token number">1</span>  <span class="token operator">-</span>后加空格<span class="token operator">-</span> 目录<span class="token number">2</span><span class="token operator">-</span> 目录<span class="token number">3</span><span class="token comment">//有序列表</span>  <span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">.</span> <span class="token operator">+</span>名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">右键》插入》表格用代码过于复杂不推荐使用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><table><thead><tr><th align="center">姓名</th><th align="center">数字</th><th align="center">语文</th></tr></thead><tbody><tr><td align="center">小王</td><td align="center">85</td><td align="center">21</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> hexo博客 </category>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
